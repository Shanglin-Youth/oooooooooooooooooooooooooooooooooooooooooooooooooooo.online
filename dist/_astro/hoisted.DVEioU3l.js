import{s as L}from"./utils.CbUDYZ0r.js";var E=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function k(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var g={exports:{}};/*!
 * ToastMaker v1.0.9
 * https://github.com/vivekweb2013/toastmaker
 * @license MIT
 */(function(t,C){(function(m,c){t.exports=c()})(E,function(m){var c=function(d,i,e){var n=function(l,o,f,w,u){var y=Array.isArray(l)?"array":typeof l;if(w&&(l==null||l===""))throw"Invalid argument '"+o+"'. Argument is either empty, null or undefined";if(y!==f)throw"Invalid argument '"+o+"'. Type must be "+f+" but found "+y;if(u&&u.indexOf(l)==-1)throw"Invalid value "+l+" specified for argument '"+o+"'. Allowed - "+u.join(" | ")};n(d,"text","string",!0),e=e||{},n(e,"options","object"),i=i||3e3,n(i,"timeout","number"),e.styles=e.styles||{},n(e.styles,"styles","object"),e.align=e.align||"center",n(e.align,"align","string",!0,["left","center","right"]),e.valign=e.valign||"bottom",n(e.valign,"valign","string",!0,["top","bottom"]),e.classList=e.classList||[],n(e.classList,"classList","array");var b=["toastmaker","toastmaker-"+e.valign,"toastmaker-"+e.align];e.classList=e.classList.concat(b);var a=document.createElement("div");e.classList.forEach(function(l){if(typeof l!="string")throw"Invalid css class '"+JSON.stringify(l)+"'. CSS class must be of type string";a.classList.add(l)});var h=document.createTextNode(d);a.appendChild(h),a.style.animationDuration=i/1e3+"s";for(var r in e.styles){if(typeof e.styles[r]!="string"&&typeof e.styles[r]!="number")throw"Invalid value '"+JSON.stringify(e.styles[r])+"' specified for style '"+r+"'. Style value must be of type string or number";a.style[r]=e.styles[r]}document.body.appendChild(a),setTimeout(function(){document.body.removeChild(a)},i)};return c})})(g);var I=g.exports;const T=k(I),v=document.getElementById("origin-url"),s=document.getElementById("long-url");v?.addEventListener("input",()=>{try{const t=new URL(v.value);s.value=`${location.origin}/O${L(t.href)}ONLINE`}catch(t){console.error(t),s.value=""}});const O=document.getElementById("open-url"),j=document.getElementById("copy-url");O.addEventListener("click",()=>{s.value&&window.open(s.value,"_blank")});j.addEventListener("click",async()=>{s.value&&(await navigator.clipboard.writeText(s.value),T("长网址已复制",1e3))});
